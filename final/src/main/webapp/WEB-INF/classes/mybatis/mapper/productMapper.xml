<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="product">

	<select id="seq" resultType="Integer">
		SELECT product_seq.NEXTVAL FROM dual
	</select>

	<!-- 상품 정보 -->
	<insert id="insertProduct" parameterType="com.fin.app.product.Product">
		INSERT INTO product(pNum, pCateNum, pName, pPrice, pDiscountRate, pContent, delivType, pDate)
		VALUES(#{pNum}, #{pCateNum}, #{pName}, #{pPrice}, #{pDiscountRate}, #{pContent},
		 #{delivType}, SYSDATE)
	</insert>

	<!-- 검색조건 -->
	<sql id="where-list">
		<if test="condition == 'title'">
			INSTR(pName, #{keyword}) &gt; 0
		</if>
	</sql>

	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM product p
		JOIN storeDetailOpt d ON p.pNum = d.pNum
		<where>
			<if test="pCateNum!=null and pCateNum != 0">
				pCateNum = #{pCateNum}
			</if>		
			<if test="keyword != null and keyword != '' ">
				AND<include refid="where-list"/>
			</if>
		</where>
	</select>

	<!-- 전체리스트 -->
	<select id="listProduct" parameterType="map" resultType="com.fin.app.product.Product">
		SELECT p.pNum, pCateNum, pName, pPrice, pDetailPrice, pDiscountRate, pImgName, pDate
		FROM product p
		JOIN storeDetailOpt d ON p.pNum = d.pNum
		LEFT OUTER JOIN (
			SELECT pImgNum, pImgName, pNum FROM(
				SELECT pImgNum, pImgName, pNum,
					ROW_NUMBER() OVER(PARTITION BY pNum ORDER BY pImgNum ASC)rank
				 FROM productImage
			) WHERE rank = 1
		) i ON p.pNum = i.pNum
		<where>
			<if test="pCateNum!=null and pCateNum != 0">
				pCateNum = #{pCateNum}
			</if>		
			<if test="keyword != null and keyword != '' ">
				AND<include refid="where-list"/>
			</if>
		</where>
		ORDER BY pNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	

	<!-- 글보기 -->
	<select id="readProduct" parameterType="Integer" resultType="com.fin.app.product.Product">
		SELECT p.pNum, pName, pDiscountRate, pContent, pPrice, pDetailPrice
        ,pDetailCnt, s.storeSubOptNum, m.storeMainOptNum
		FROM product p
		JOIN storeDetailOpt d ON p.pNum = d.pNum
        JOIN storeSubOpt s ON d.storeSubOptNum = s.storeSubOptNum
        JOIN storeMainOpt m ON s.storeMainOptNum = m.storeMainOptNum	
		WHERE p.pNum = #{pNum}
	</select>

	<!-- 글수정 -->
	<update id="updateProduct" parameterType="com.fin.app.product.Product">
		UPDATE product SET pName=#{pName}, pPrice=#{pPrice}, pDiscountRate=#{pDiscountRate}, pContent=#{pContent},
		 delivType=#{delivType}
		WHERE pNum=#{pNum}
	</update>
	
	<!-- 글삭제 -->
	<delete id="deleteProduct" parameterType="Integer">
		DELETE FROM product WHERE pNum=#{pNum}	
	</delete>


	<!-- 카테고리 -->
	<select id="listCategory" resultType="com.fin.app.product.Product">
		SELECT pCateNum, pCateName FROM productCategory
	</select>		
	
	<!-- 옵션 -->
	<select id="listMainOpt" resultType="com.fin.app.product.Product">
		SELECT storeMainOptNum, storeMainOptName FROM storeMainOpt
	</select>	

	<select id="listSubOpt"  parameterType="map" resultType="com.fin.app.product.Product">
		SELECT storeSubOptNum, storeSubOptName, storeMainOptNum 
		FROM storeSubOpt s
		WHERE storeMainOptNum = #{storeMainOptNum}
	</select>	
	 
	 <!-- 상품상세정보 --> 
	<insert id="insertStoreDetail" parameterType="com.fin.app.product.Product">
		INSERT INTO storeDetailOpt(storeDetailOptNum, storeSubOptNum, pNum, pDetailCnt, pDetailPrice)
		VALUES(storeDetailOpt_seq.NEXTVAL, #{storeSubOptNum}, #{pNum}, #{pDetailCnt}, #{pDetailPrice})
	</insert>
	
	<update id="updateStoreDetail" parameterType="com.fin.app.product.Product">
		UPDATE storeDetailOpt SET storeSubOptNum=#{storeSubOptNum}, pDetailCnt=#{pDetailCnt}, pDetailPrice=#{pDetailPrice}
		WHERE pNum = #{pNum}
	</update>
		
	<!-- 사진파일 -->
	<insert id="insertProductImage" parameterType="com.fin.app.product.Product">
		INSERT INTO productImage(pImgNum, pImgName, pNum)
		VALUES(productImage_seq.NEXTVAL, #{pImgName}, #{pNum})
	</insert>	
	
	<select id="listProductImage" parameterType="Integer" resultType="com.fin.app.product.Product">
		SELECT pImgNum, pImgName, pNum
		FROM productImage
		WHERE pNum=#{pNum}
	</select>
	
	<select id="readProductImage" parameterType="Integer" resultType="com.fin.app.product.Product">
		SELECT pImgNum, pImgName, pNum
		FROM productImage
		WHERE pImgNum = #{pImgNum}
	</select>
	
	<delete id="deleteProductImage" parameterType="map">
		DELETE FROM productImage WHERE ${field} = #{pNum}
	</delete>

</mapper>